program: function+ call

function: IDENTIFIER TYPE IDENTIFIER ("," TYPE IDENTIFIER)* ":" "{" statement* return_statement "}"

statement: IF "(" expression ")" "{" (statement | return_statement) "}"
         | IF "(" expression ")" "{" (statement | return_statement) "}" ELSE "{" (statement | return_statement) "}"
         | TYPE IDENTIFIER "=" (STRING | NUMBER | expression)
         | call

expression: expression OPERATOR expression
          | IDENTIFIER OPERATOR IDENTIFIER
          | IDENTIFIER OPERATOR expression
          | IDENTIFIER OPERATOR (STRING | NUMBER)
          | call

call: IDENTIFIER "(" (call | expression | STRING | NUMBER) ("," (call | expression | STRING | NUMBER))* ")"

return_statement: RETURN (call | IDENTIFIER | expression)*

IF: "if" 
ELSE: "else"
RETURN: "return"
OPERATOR: "+" | "-" | "*" | "/" | "==" | "<" | ">" | "!=" | "<=" | ">="
TYPE: "string" | "int"
IDENTIFIER: /[a-zA-Z_][a-zA-Z_]*/
STRING: /\".*?\"/
NUMBER: /\-?[0-9]+/

%import common.SIGNED_NUMBER
%import common.ESCAPED_STRING
%import common._STRING_INNER
%import common.WS
%ignore WS
